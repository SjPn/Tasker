// Generated by view binder compiler. Do not edit!
package com.noter.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.noter.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView daysRecyclerView;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialCardView infoCard;

  @NonNull
  public final TextView infoMessageTextView;

  @NonNull
  public final TextView infoTitleTextView;

  @NonNull
  public final ImageButton menuButton;

  @NonNull
  public final ImageView taskoraLogo;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView daysRecyclerView, @NonNull View divider,
      @NonNull MaterialCardView infoCard, @NonNull TextView infoMessageTextView,
      @NonNull TextView infoTitleTextView, @NonNull ImageButton menuButton,
      @NonNull ImageView taskoraLogo) {
    this.rootView = rootView;
    this.daysRecyclerView = daysRecyclerView;
    this.divider = divider;
    this.infoCard = infoCard;
    this.infoMessageTextView = infoMessageTextView;
    this.infoTitleTextView = infoTitleTextView;
    this.menuButton = menuButton;
    this.taskoraLogo = taskoraLogo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.daysRecyclerView;
      RecyclerView daysRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (daysRecyclerView == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.infoCard;
      MaterialCardView infoCard = ViewBindings.findChildViewById(rootView, id);
      if (infoCard == null) {
        break missingId;
      }

      id = R.id.infoMessageTextView;
      TextView infoMessageTextView = ViewBindings.findChildViewById(rootView, id);
      if (infoMessageTextView == null) {
        break missingId;
      }

      id = R.id.infoTitleTextView;
      TextView infoTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (infoTitleTextView == null) {
        break missingId;
      }

      id = R.id.menuButton;
      ImageButton menuButton = ViewBindings.findChildViewById(rootView, id);
      if (menuButton == null) {
        break missingId;
      }

      id = R.id.taskoraLogo;
      ImageView taskoraLogo = ViewBindings.findChildViewById(rootView, id);
      if (taskoraLogo == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, daysRecyclerView, divider,
          infoCard, infoMessageTextView, infoTitleTextView, menuButton, taskoraLogo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
